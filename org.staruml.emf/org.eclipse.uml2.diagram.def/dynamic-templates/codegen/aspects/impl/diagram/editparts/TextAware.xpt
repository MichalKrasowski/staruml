/*
 * Copyright (c) 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Michael Golubev (Borland) - #238308, #238307, #246402
 *   Tatiana Fesenko (Borland) - #246358 - Show image of stereotype on the extended element
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»

«EXTENSION xpt::rotatedlabel::RotatedLabelsSupport»
«EXTENSION xpt::stereo::StereotypeIconSupport»
«EXTENSION xpt::detaillevels::DetailLevelsSupport»

«AROUND methods(needsRefreshBounds : Boolean, readOnly : Boolean, useElementIcon : Boolean, viewmap : gmfgen::Viewmap,
		modelFacet : gmfgen::LabelModelFacet, host : gmfgen::GenCommonBase, diagram : gmfgen::GenDiagram) FOR gmfgen::GenCommonBase-»
		
		«targetDef.proceed()»
		
		«EXPAND refreshFeedback -»
		
		«EXPAND getLabelDelegate -»
		
		«EXPAND getAdapter -»
«ENDAROUND»		

«AROUND fields FOR gmfgen::GenCommonBase-»
		«targetDef.proceed()»
		
		«EXPAND xpt::Common::generatedMemberComment»
		org.eclipse.gmf.runtime.diagram.ui.label.ILabelDelegate labelDelegate;
		
	
«ENDAROUND»

«DEFINE refreshFeedback FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	private void refreshFeedback() {
		Object pdEditPolicy = getEditPolicy(org.eclipse.gef.EditPolicy.PRIMARY_DRAG_ROLE);
		if (pdEditPolicy instanceof org.eclipse.uml2.diagram.common.editpolicies.IRefreshableFeedbackEditPolicy) {
			((org.eclipse.uml2.diagram.common.editpolicies.IRefreshableFeedbackEditPolicy) pdEditPolicy).refreshFeedback();
		}
	}
«ENDDEFINE»

«AROUND setLabelText(diagram : gmfgen::GenDiagram) FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	public void setLabelText(String text) {
		setLabelTextHelper(getFigure(), text);
		refreshFeedback();
	}
«ENDAROUND»
	
«AROUND refreshLabel(diagram : gmfgen::GenDiagram) FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void refreshLabel() {
		setLabelTextHelper(getFigure(), getLabelText());
		setLabelIconHelper(getFigure(), getLabelIcon());
		refreshFeedback();
	}
«ENDAROUND»

«AROUND getLabelTextHelper FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected String getLabelTextHelper(org.eclipse.draw2d.IFigure figure) {
		if (figure instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) {
			return ((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) figure).getText();
		} «IF isRotatedLabel(self)-»
		else if (figure instanceof org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) {
			return ((org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) figure).getText();
		} «ENDIF-»
		else {
			return ((org.eclipse.draw2d.Label) figure).getText();
		}
	}
«ENDAROUND»

«AROUND setLabelTextHelper FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void setLabelTextHelper(org.eclipse.draw2d.IFigure figure, String text) {
		if (figure instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) {
			((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) figure).setText(text);
		} «IF isRotatedLabel(self)-»
		else if (figure instanceof org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) {
			((org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) figure).setText(text);
		} «ENDIF-»
		else {
			((org.eclipse.draw2d.Label) figure).setText(text);
		}
	}
«ENDAROUND»

«AROUND getLabelIconHelper FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.swt.graphics.Image getLabelIconHelper(org.eclipse.draw2d.IFigure figure) {
		if (figure instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) {
			return ((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) figure).getIcon();
		} «IF isRotatedLabel(self)-»
		else if (figure instanceof org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) {
			//rotated label icons are not supported -- do nothing
			return null; 
		} «ENDIF-»
		else {
			return ((org.eclipse.draw2d.Label) figure).getIcon();
		}
	}
«ENDAROUND»

«AROUND setLabelIconHelper FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected void setLabelIconHelper(org.eclipse.draw2d.IFigure figure, org.eclipse.swt.graphics.Image icon) {
		if (figure instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) {
			((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel) figure).setIcon(icon);
		} «IF isRotatedLabel(self)-»
		else if (figure instanceof org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) {
			//rotated label icons are not supported -- do nothing
			return; 
		} «ENDIF-»
		else {
			((org.eclipse.draw2d.Label) figure).setIcon(icon);
		}
	}
«ENDAROUND»

«AROUND getManager(diagram : gmfgen::GenDiagram) FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.gef.tools.DirectEditManager getManager() {
		if (manager == null) {
			setManager(new org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager(this,
				«REM»see #246881
				org.eclipse.gmf.runtime.diagram.ui.tools.TextDirectEditManager.getTextCellEditorClass(this),
				«ENDREM»«-»
				null, 
				«diagram.getEditPartFactoryQualifiedClassName()».getTextCellEditorLocator(this)));
		}
		return manager;
	}
«ENDAROUND»

«AROUND getLabelIcon(useElementIcon : Boolean, diagram : gmfgen::GenDiagram) FOR gmfgen::GenCommonBase-»
«IF isIconExtendedByStereotype(self)-»
«EXPAND xpt::stereo::TextAware::getLabelIcon(useElementIcon, diagram)»
«ELSE-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.swt.graphics.Image getLabelIcon() {
		«IF useElementIcon-»
		org.eclipse.emf.ecore.EObject parserElement = getParserElement();
		if (parserElement == null) {
			return null;
		}
		«IF not self.oclIsKindOf(gmfgen::GenLinkLabel)-»
		boolean shouldShow = «EXPAND xpt::preferences::IconStylePreferenceHelper::qualifiedClassName FOR getDiagram()».shouldShowMetaclassIcon(VISUAL_ID, getDiagramPreferencesHint());
		if (!shouldShow){
			return null;
		}			
		«ENDIF-»
		return «diagram.getElementTypesQualifiedClassName()».getImage(parserElement.eClass());
		«ELSE-»
		return null;
		«ENDIF-»
	}
«ENDIF-»	
«ENDAROUND»


«DEFINE getLabelDelegate FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gmf.runtime.diagram.ui.label.ILabelDelegate getLabelDelegate(){
		if (labelDelegate == null){
			org.eclipse.draw2d.IFigure label = getFigure();
			if (label instanceof org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel){
				labelDelegate = new org.eclipse.gmf.runtime.diagram.ui.label.WrappingLabelDelegate((org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel)label);
			} «IF isRotatedLabel(self)-»
			else if (figure instanceof org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString) {
				labelDelegate = new org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfStringLabelDelegate((org.eclipse.uml2.diagram.common.draw2d.RotatedImageOfString)figure); 
			} «ENDIF-»
			else {
				labelDelegate = new org.eclipse.uml2.diagram.common.draw2d.SimpleLabelDelegate((org.eclipse.draw2d.Label)label);
			}
		}
		return labelDelegate;
	}

«ENDDEFINE»

«DEFINE getAdapter FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public Object getAdapter(Class key) {
		if (org.eclipse.gmf.runtime.diagram.ui.label.ILabelDelegate.class.equals(key)){
			return getLabelDelegate();
		}
		return super.getAdapter(key);
	}

«ENDDEFINE»

«AROUND performDirectEditRequest FOR gmfgen::GenCommonBase-»
«IF isStereotypeAndNameGroupName(self)-»
«EXPAND xpt::stereo::TextAware::performDirectEditRequest_redirectToStereotypeLabel FOR self.oclAsType(gmfgen::GenNodeLabel)-»
«ELSE-»
«targetDef.proceed()-»
«ENDIF-»
«ENDAROUND»

«AROUND performDirectEditWithInitialChar FOR gmfgen::GenCommonBase-»
«IF isStereotypeAndNameGroupStereotype(self)-»
«EXPAND xpt::stereo::TextAware::performDirectEditWithInitialChar FOR self.oclAsType(gmfgen::GenNodeLabel)-»
«ELSE-»
«targetDef.proceed()-»
«ENDIF-»
«ENDAROUND»

«AROUND getParserOptions FOR gmfgen::GenCommonBase-»
«IF isDetailsAwareParser(self)-»
«EXPAND xpt::detaillevels::TextAware::getParserOptions»
«ELSE-»
«targetDef.proceed()-»
«ENDIF-» 
«ENDAROUND»

