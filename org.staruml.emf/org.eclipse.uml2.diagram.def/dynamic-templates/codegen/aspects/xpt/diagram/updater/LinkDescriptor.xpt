/*
 * Copyright (c) 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - 
 *				#239267 - Provide typed API for common generated GMF statically accessible constructs 
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

«AROUND LinkDescriptor FOR gmfgen::GenDiagramUpdater-»
	«EXPAND xpt::Common::copyright FOR editorGen-»
package «editorGen.editor.packageName»;

	«EXPAND xpt::Common::generatedClassComment»
public class «linkDescriptorClassName» extends «getNodeDescriptorQualifiedClassName()» implements «EXPAND aspects::xpt::diagram::updater::LinkDescriptor::implementsList» {

	«EXPAND xpt::diagram::updater::LinkDescriptor::attributes-»
	
	«EXPAND xpt::diagram::updater::LinkDescriptor::_constructor-»
	
	«EXPAND xpt::diagram::updater::LinkDescriptor::refOnlyLinkConstructor-»
	
	«EXPAND xpt::diagram::updater::LinkDescriptor::typeLinkConstructor-»
	
	«EXPAND xpt::diagram::updater::LinkDescriptor::getSource-»

	«EXPAND xpt::diagram::updater::LinkDescriptor::getDestination-»
	
	«EXPAND xpt::diagram::updater::LinkDescriptor::getSemanticAdapter-»
		
	«EXPAND xpt::diagram::updater::LinkDescriptor::additions-»
}
«ENDAROUND»

«AROUND xpt::diagram::updater::LinkDescriptor::additions FOR gmfgen::GenDiagramUpdater»
	«EXPAND hashSupport»
«ENDAROUND»

«DEFINE implementsList FOR gmfgen::GenDiagramUpdater»org.eclipse.uml2.diagram.common.genapi.IUpdaterLinkDescriptor «ENDDEFINE»

«DEFINE hashSupport FOR gmfgen::GenDiagramUpdater»
	«EXPAND xpt::Common::generatedClassComment»	
	@Override
	public boolean equals(Object obj) {
		if (obj == this){
			return true;
		}
		if (obj instanceof org.eclipse.uml2.diagram.common.genapi.IUpdaterLinkDescriptor){
			org.eclipse.uml2.diagram.common.genapi.IUpdaterLinkDescriptor that = (org.eclipse.uml2.diagram.common.genapi.IUpdaterLinkDescriptor)obj;
			return this.getVisualID() == that.getVisualID() && // 
				safeEquals(this.getModelElement(), that.getModelElement()) && // 
				safeEquals(this.getSource(), that.getSource()) && //
				safeEquals(this.getDestination(), that.getDestination());
		}
		return false;
	}
	
	«EXPAND xpt::Common::generatedClassComment»	
	@Override
	public int hashCode() {
		return super.hashCode() + 3 * safeHashCode(mySource) + 7 * safeHashCode(myDestination);
	}
	
	
	«EXPAND xpt::Common::generatedClassComment»	
	private int safeHashCode(Object o) {
		return o == null ? 0 : o.hashCode();
	}

«ENDDEFINE»