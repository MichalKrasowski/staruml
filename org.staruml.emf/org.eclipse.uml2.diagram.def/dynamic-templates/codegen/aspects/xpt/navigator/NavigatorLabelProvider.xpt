/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - UML2Tools tweaked version
 * 
 * Generates code for labels without labelModelFacet's, assuming they have the default parser provider implementation 
 */
 
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»
«EXTENSION xpt::GenModelUtils»
 
«AROUND getText FOR gmfgen::GenChildLabelNode-»
«REM»
	Default GMF code works for labelModelFacet
	We want to extend whis for GenChildLabelNode with modelFacet, say for Properties at profile diagram
«ENDREM»«-»
	«IF null <> modelFacet and null = labelModelFacet-»
		«EXPAND getDiagramLabelTextForLabelWithModelFacetOnly(self, self) FOR modelFacet-»	
	«ELSE-»
		«targetDef.proceed()-»
	«ENDIF-»
«ENDAROUND»

«AROUND getDiagramLabelText(labels : Sequence(gmfgen::GenLabel)) FOR gmfgen::GenCommonBase-»
	«IF labels->isEmpty()-»
		«ERROR 'Empty list of labels passed'-»
	«ENDIF-»
	«LET labels->select(l | null <> l.modelFacet)->first().oclAsType(gmfgen::GenLabel) AS label-»
		«IF null = label-»
			return "";	
		«ELSE-»
			«targetDef.proceed()-»
		«ENDIF-»
	«ENDLET-»
«ENDAROUND»

«DEFINE getDiagramLabelTextForLabelWithModelFacetOnly(elementTypeHolder : gmfgen::GenCommonBase, hintHolder : gmfgen::GenCommonBase) FOR gmfgen::TypeModelFacet-»
«REM»
	At the time of writing, below is almost exact copy of the GMF getDiagramLabelText() DEFINE 
«ENDREM»«-»
org.eclipse.core.runtime.IAdaptable hintAdapter = new «elementTypeHolder.getDiagram().getParserProviderQualifiedClassName()».HintAdapter(«elementTypeHolder.getDiagram().getElementTypesQualifiedClassName()».«elementTypeHolder.getUniqueIdentifier()», (view.getElement() != null ? view.getElement() : view), «EXPAND hintForCaseWithModelFacetOnly(hintHolder)»);
org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = org.eclipse.gmf.runtime.common.ui.services.parser.ParserService.getInstance().getParser(hintAdapter);
		
if (parser != null) {
	return parser.getPrintString(hintAdapter, org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	«hintHolder.getDiagram().editorGen.plugin.getActivatorQualifiedClassName()».getInstance().logError("Parser was not found for label " + «hintHolder.visualID»); «EXPAND xpt::Common::nonNLS»
	«EXPAND xpt::navigator::NavigatorLabelProvider::returnEmptyString-»
}
«ENDDEFINE»

«DEFINE hintForCaseWithModelFacetOnly(hintHolder : gmfgen::GenCommonBase) FOR gmfgen::ModelFacet»«EXPAND xpt::editor::VisualIDRegistry::typeMethodCall FOR hintHolder»«ENDDEFINE»