/*
 * Copyright (c) 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - custom icons for diagram elements
 *    Tatiana Fesenko (Borland) - #262592 'Contribute UMLPaletteFactory via gmf-runtime IPaletteProvider'
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»

«EXTENSION xpt::extendedpalette::Utils»

«AROUND createPaletteRoot FOR gmfgen::Palette-»
«IF not supportsExtendedPalette(diagram)-»
«targetDef.proceed()-»
«ELSE-»
	«EXPAND xpt::Common::generatedMemberComment»
protected org.eclipse.gef.palette.PaletteRoot createPaletteRoot(org.eclipse.gef.palette.PaletteRoot existingPaletteRoot) {
	org.eclipse.gef.palette.PaletteRoot root = super.createPaletteRoot(existingPaletteRoot);
«REM» #262592 'Contribute UMLPaletteFactory via gmf-runtime IPaletteProvider'«ENDREM»«-»
//	new «getFactoryQualifiedClassName()»().fillPalette(root);
	return root;
}
«ENDIF-»
«ENDAROUND»

«AROUND xpt::editor::Editor::additions FOR gmfgen::GenEditorView-»
	«EXPAND xpt::Common::generatedMemberComment»	
	public void refresh() {
		refreshPalette();
		refreshDiagram();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private void refreshDiagram() {
		getDiagramGraphicalViewer().setContents(getDiagram());
	}


	«EXPAND xpt::Common::generatedMemberComment»
	public void refreshPalette() {
		org.eclipse.gef.palette.PaletteRoot paletteRoot = getEditDomain().getPaletteViewer().getPaletteRoot();
		cleanPaletteRoot(paletteRoot);
		createPaletteRoot(paletteRoot);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private void cleanPaletteRoot(org.eclipse.gef.palette.PaletteRoot paletteRoot) {
		java.util.List<Object> entries = new java.util.ArrayList<Object>();
		entries.addAll(paletteRoot.getChildren());
		for (Object entry : entries) {
			org.eclipse.gef.palette.PaletteEntry paletteEntry = (org.eclipse.gef.palette.PaletteEntry) entry;
			// we don't repaint standard palette group
			if (org.eclipse.gmf.runtime.diagram.ui.services.palette.PaletteService.GROUP_STANDARD.equals(paletteEntry.getId())) {
				continue;
			}
			paletteRoot.remove(paletteEntry);
		}
	}

«ENDAROUND»

