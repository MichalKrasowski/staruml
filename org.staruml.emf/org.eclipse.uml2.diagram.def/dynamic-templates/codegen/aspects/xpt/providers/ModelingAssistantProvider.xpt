/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Michael Golubev (Borland) - #241066
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

«EXTENSION xpt::diagram::Utils»
«EXTENSION xpt::providers::i18n»
«EXTENSION xpt::diagramheader::DiagramHeader»

«AROUND getTypesForPopupBar FOR gmfgen::GenDiagram-»
	«EXPAND xpt::Common::generatedMemberComment»
	public java.util.List<?> getTypesForPopupBar(org.eclipse.core.runtime.IAdaptable host) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) host.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
		«FOREACH getAllContainers()->asSequence() AS container-»
			«LET container.getAssistantNodes()->reject(n | isDiagramHeader(n))->asSequence() AS filteredAssistantNodes»
			«IF filteredAssistantNodes->size() > 0-»
		if (editPart instanceof «container.getEditPartQualifiedClassName()») {
			java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				«FOREACH filteredAssistantNodes AS node-»
			types.add(«getElementTypesQualifiedClassName()».«node.getUniqueIdentifier()»);
				«ENDFOREACH-»
			return types;
		}
			«ENDIF-»
			«ENDLET-»
		«ENDFOREACH-»
		return java.util.Collections.emptyList();
	}
«ENDAROUND»
