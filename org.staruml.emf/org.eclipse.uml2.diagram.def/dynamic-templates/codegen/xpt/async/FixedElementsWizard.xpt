«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/modeling/mdt/uml2tools/gmf/GenModel'»

«EXTENSION xpt::diagramheader::DiagramHeader»
«EXTENSION xpt::editor::Utils»

«DEFINE className FOR gmfgen::GenDiagram»«self.editorGen.modelID»FixedElementsWizard«ENDDEFINE»
«DEFINE packageName FOR gmfgen::GenDiagram»«self.editorGen.packageNamePrefix».async«ENDDEFINE»
«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«EXPAND packageName».«EXPAND className»«ENDDEFINE»

«DEFINE FixedElementsWizard FOR gmfgen::GenDiagram»
package «EXPAND packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» extends «EXPAND xpt::editor::NewDiagramFileWizard::qualifiedClassName»{

	«EXPAND xpt::Common::generatedMemberComment»
	private final org.eclipse.uml2.uml.PackageableElement[] myToSelect;

	«EXPAND xpt::Common::generatedMemberComment»
	private NewDiagramSyncHelperWithFixedElements mySyncHelper;
	
	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className»(org.eclipse.emf.common.util.URI domainModelURI, org.eclipse.emf.ecore.EObject diagramRoot, org.eclipse.uml2.uml.PackageableElement[] toSelect, org.eclipse.emf.transaction.TransactionalEditingDomain editingDomain) {
		super(domainModelURI, diagramRoot, editingDomain);
		myToSelect = toSelect;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public void addPages() {
		addPage(getFileCreationPage());
		addPage(getDiagramRootElementSelectionPage());
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected boolean needsLayoutAll() throws org.eclipse.core.commands.ExecutionException {
		return true;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected void layoutAll() throws org.eclipse.core.commands.ExecutionException {
		createShortcutsIfNeeded();
		super.layoutAll();
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private void createShortcutsIfNeeded() {
		«LET self.editorGen.contextMenus.items[gmfgen::CreateShortcutAction]->asSequence()->first() AS createShortcutAction-»
		«IF null <> createShortcutAction-»
		org.eclipse.ui.IEditorPart editorPart = org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();
		org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart diagramEditPart = ((org.eclipse.gmf.runtime.diagram.ui.parts.IDiagramWorkbenchPart) editorPart).getDiagramEditPart();
		org.eclipse.core.commands.operations.IOperationHistory history = org.eclipse.core.commands.operations.OperationHistoryFactory.getOperationHistory();
		for (org.eclipse.uml2.uml.PackageableElement next : myToSelect) {
			if (!canCreateView(next)) {
				«createShortcutAction.qualifiedClassName».createShortcut(diagramEditPart.getEditingDomain(), history, next, diagramEditPart, editorPart);
			}
		}
		«ELSE-»
		//no create shortcut action available, nothing to do
		«ENDIF-»
		«ENDLET-»
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private boolean canCreateView(org.eclipse.emf.ecore.EObject element) {
		for (Object next : getDiagram().getChildren()) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) next;
			if (element.equals(view.getElement())) {
				return true;
			}
		}
		return false;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected org.eclipse.gmf.runtime.emf.commands.core.command.AbstractTransactionalCommand getApplySynchronizationCommand() {
		org.eclipse.emf.ecore.EObject semanticRoot = getDiagramRootElementSelectionPage().getModelElement();
		getEditingDomain().getResourceSet().getResource(semanticRoot.eResource().getURI(), true);
		mySyncHelper = new NewDiagramSyncHelperWithFixedElements(createSyncContext(semanticRoot), «getEditPartQualifiedClassName()».MODEL_ID);
		mySyncHelper.setSemanticRoot(semanticRoot);
		return new org.eclipse.uml2.diagram.common.async.ApplySynchronizationCommand(mySyncHelper.getSyncRoot());
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	protected SyncModelContextWithFixedElements createSyncContext(org.eclipse.emf.ecore.EObject semanticRoot) {
		return new SyncModelContextWithFixedElements(//
				«EXPAND aspects::xpt::diagram::updater::DiagramUpdater::typedSharedInstanceCall FOR self.editorGen.diagramUpdater», // 
				«EXPAND aspects::xpt::editor::VisualIDRegistry::typedSharedInstanceCall», //
				«EXPAND xpt::plugin::Activator::preferenceHintAccess FOR self.editorGen», //
				getEditingDomain(), myToSelect, true);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected org.eclipse.gmf.runtime.notation.Diagram getDiagram() {
		return mySyncHelper.getNewDiagram();
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	private static class NewDiagramSyncHelperWithFixedElements extends org.eclipse.uml2.diagram.common.async.NewDiagramSyncHelper {
		«EXPAND xpt::Common::generatedMemberComment»
		public NewDiagramSyncHelperWithFixedElements(SyncModelContextWithFixedElements contextImpl, String diagramModelId){
			super(contextImpl, diagramModelId);
		}
		
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.uml2.diagram.common.async.SyncModelNode createRootNode(org.eclipse.uml2.diagram.common.async.SyncModelContext context, org.eclipse.gmf.runtime.notation.Diagram syncDiagram, org.eclipse.gmf.runtime.notation.Diagram tempDiagram) {
			org.eclipse.uml2.diagram.common.async.SyncModelNode result = new SyncModelNodeForInitializedDiagram(syncDiagram, tempDiagram, context);
			return result;
		}
	}

	«EXPAND xpt::Common::generatedMemberComment»
	private static class SyncModelNodeForInitializedDiagram extends org.eclipse.uml2.diagram.common.async.SyncModelNode {
		«EXPAND xpt::Common::generatedMemberComment»
		public SyncModelNodeForInitializedDiagram(org.eclipse.gmf.runtime.notation.View syncModelRoot, org.eclipse.gmf.runtime.notation.View diagramRoot, org.eclipse.uml2.diagram.common.async.SyncModelContext context) {
			super(syncModelRoot, diagramRoot, context);
		}

		«EXPAND xpt::Common::generatedMemberComment»
		@Override
		public boolean isAutoSynchronized() {
			return false;
		}

		«EXPAND xpt::Common::generatedMemberComment»
		private SyncModelNodeForInitializedDiagram(org.eclipse.gmf.runtime.notation.View syncModelView, org.eclipse.uml2.diagram.common.async.SyncModelNode parent) {
			super(syncModelView, parent);
		}

		«EXPAND xpt::Common::generatedMemberComment»
		@Override
		public void initWithDiagramView(org.eclipse.gmf.runtime.notation.View diagramView) {
			super.initWithDiagramView(diagramView);
			setChecked(isInToCreateList() || «EXPAND xpt::async::DiagramHeaderFilter::sharedInstanceCall».isFilteredVisualId(this));
		}
		
		«EXPAND xpt::Common::generatedMemberComment»
		private boolean isInToCreateList() {
			org.eclipse.uml2.uml.PackageableElement[] toSelect = ((SyncModelContextWithFixedElements) getContext()).getElementsToDisplay();
			if (toSelect == null || toSelect.length == 0) {
				return true; //diagram is selected, all diagram contents considered as implicit to-create list  
			}
			return java.util.Arrays.asList(toSelect).contains(getSyncModelView().getElement());
		}

		«EXPAND xpt::Common::generatedMemberComment»
		@Override
		protected org.eclipse.uml2.diagram.common.async.SyncModelNode doCreateNodeView(org.eclipse.gmf.runtime.notation.View syncModelView, org.eclipse.uml2.diagram.common.async.SyncModelNode parent) {
			return new SyncModelNodeForInitializedDiagram(syncModelView, parent);
		}

	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected static class SyncModelContextWithFixedElements extends org.eclipse.uml2.diagram.common.async.SyncModelContext {
		«EXPAND xpt::Common::generatedMemberComment»
		private org.eclipse.uml2.uml.PackageableElement[] myElementsToDisplay;

		«EXPAND xpt::Common::generatedMemberComment»
		public SyncModelContextWithFixedElements(org.eclipse.uml2.diagram.common.genapi.IDiagramUpdater updater, org.eclipse.uml2.diagram.common.genapi.IVisualIDRegistry registry, «-»
				org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint preferencesHint, org.eclipse.emf.transaction.TransactionalEditingDomain domain, «-»
				org.eclipse.uml2.uml.PackageableElement[] toSelect, boolean isDiagramInit) {
			
			super(updater, registry, preferencesHint, domain, isDiagramInit);
			myElementsToDisplay = toSelect;
		}

		«EXPAND xpt::Common::generatedMemberComment»
		public org.eclipse.uml2.uml.PackageableElement[] getElementsToDisplay() {
			return myElementsToDisplay;
		}
	}

}
«ENDDEFINE»
